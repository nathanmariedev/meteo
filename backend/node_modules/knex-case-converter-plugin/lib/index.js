'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.postProcessResponse = exports.wrapIdentifier = undefined;

var _decamelize = require('decamelize');

var _decamelize2 = _interopRequireDefault(_decamelize);

var _camelcase = require('camelcase');

var _camelcase2 = _interopRequireDefault(_camelcase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//do not use underscore camel to snake case, does not work
function wrapIdentifier(value, origImpl) {
  return origImpl((0, _decamelize2.default)(value));
}

function postProcessResponse(result) {
  function mapKeysToCamelCase(obj) {
    var transformed = {};
    Object.keys(obj).forEach(function (key) {
      return transformed[(0, _camelcase2.default)(key)] = obj[key];
    });
    return transformed;
  }

  if (!result) return result;

  if (Array.isArray(result)) return result.map(function (row) {
    return mapKeysToCamelCase(row);
  });
  return mapKeysToCamelCase(result);
}

exports.wrapIdentifier = wrapIdentifier;
exports.postProcessResponse = postProcessResponse;
exports.default = { wrapIdentifier: wrapIdentifier, postProcessResponse: postProcessResponse };